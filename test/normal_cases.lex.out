[2, +, 3, ;
, 2, -, 3, ;
, 2, *, 3, ;
, 2, /, 3, ;
, 2, <=, 3, ;
, 3, <=, 2, ;
, 2.1, +, 3.1, ;
, 2.1, -, 3.1, ;
, 2.1, *, 3.1, ;
, 4.2, /, 2.1, ;
, 2.1, <=, 3.1, ;
, 3.1, <=, 2.1, ;
, 2, +, 3.1, ;
, 2.1, -, 3, ;
, 2, *, 3.1, ;
, 2.1, /, 3, ;
, 2, <=, 3.1, ;
, 3.1, <=, 2, ;
, 2, +, 3, *, 4, /, 1, <=, 5, ;
, true, ;
, false, ;
, if, true, then, 3, else, 4, ;
, if, 4.6, <=, 3, then, if, 2, <=, 0.9, then, 2., else, 1., else, 124.9, ;
, if, (, let, $x, :, int, =, 5, in, $x, <=, 10, ), then, 2, else, 3, ;
, 0, /, 0, ;
, 0, /, 0., ;
, 0., /, 0, ;
, 0., /, 0., ;
, 4, +, -, 5, *, 2, ;
, let, $x, :, int, =, 2, +, 3, in, $x, <=, 10, ;
, let, $y, :, int, =, 10, in, let, $y, :, int, =, 1, in, $y, +, $y, ;
, fun, (, $x, :, int, ), :, int, ->, $x, *, 2, +, 1, ;
, (, fun, (, $y, :, bool, ), :, int, ->, if, $y, then, 1, else, 0, ), (, false, ), ;
, (, fun, (, $f, :, int, ->, int, ), :, int, ->, $f, (, 10, ), ), (, fun, (, $var, :, int, ), :, int, ->, $var, -, 1, ), ;
, let, $f1, :, int, ->, int, =, (, fun, (, $x, :, int, ), :, int, ->, $x, +, 1, ), in, let, $f2, :, int, ->, int, =, (, fun, (, $x, :, int, ), :, int, ->, $x, -, 1, ), in, $f1, (, 5, ), <=, $f2, (, 5, ), ;
, (, fun, (, $x, :, int, ), :, float, ->, float, ->, fun, (, $y, :, float, ), :, float, ->, $x, /, $y, ), (, 8, ), (, 2., ), ;
, (, fun, (, $x, :, int, ), :, float, ->, float, ->, fun, (, $y, :, float, ), :, float, ->, $x, /, $y, ), (, 8, ), ;
, let, $max2, :, int, ->, (, int, ->, int, ), =, fun, (, $x, :, int, ), :, int, ->, int, ->, fun, (, $y, :, int, ), :, int, ->, if, $y, <=, $x, then, $x, else, $y, in, let, $a, :, int, =, 5, in, let, $b, :, int, =, 2, in, $max2, (, $a, ), (, $b, ), ;
, let, $fact, :, int, ->, int, =, fix, $f, (, $n, :, int, ), :, int, ->, if, $n, <=, 0, then, 1, else, $n, *, $f, (, $n, -, 1, ), in, $fact, (, 5, ), ;
, (, ), ;
, (, 5, ,, true, ), ;
, (, let, $x, :, bool, =, true, &, 4, >, 5, in, $x, ,, fun, (, $x, :, float, ), :, float, ->, $x, /, 2., ), ;
, fst, (, 5, ,, true, ), ;
, snd, (, 5, ,, true, ), ;
, fst, (, fun, (, $x, :, int, ), :, int, ->, $x, +, 1, ,, fun, (, $y, :, int, ), :, int, ->, $y, -, 1, ), (, 3, ), ;
, snd, (, fun, (, $x, :, int, ), :, int, ->, $x, +, 1, ,, fun, (, $y, :, int, ), :, int, ->, $y, -, 1, ), (, 3, ), ;
, fun, (, $x, :, bool, ), :, int, *, int, ->, if, (, $x, |, 5.6, <, 10, ), then, (, 0, ,, 0, +, 1, ), else, (, 9, ,, 9, ), ;
, (, fun, (, $x, :, bool, ), :, int, *, int, ->, if, (, $x, |, 5.6, <, 10, ), then, (, 0, ,, 0, +, 1, ), else, (, 9, ,, 9, ), ), (, true, &, false, ), ;
, hd, (, 6, ::, 5, ::, (, [, ], :, int, ), ), ;
, tl, (, 6, ::, 5, ::, (, [, ], :, int, ), ), ;
, let, $x, :, int, =, 2, in, (, 6, ::, $x, ::, (, [, ], :, int, ), ), ;
, empty, (, true, ::, false, ::, (, 4, <, 5, ), ::, (, [, ], :, bool, ), ), ;
, empty, [, ], :, float, ;
, let, $max, :, int, ->, (, int, list, ->, int, ), =, fix, $f, (, $cur_max, :, int, ), :, int, list, ->, int, ->, fun, (, $l, :, int, list, ), :, int, ->, if, (, empty, $l, ), then, $cur_max, else, let, $cur, :, int, =, hd, $l, in, if, $cur, >, $cur_max, then, $f, (, $cur, ), (, tl, $l, ), else, $f, (, $cur_max, ), (, tl, $l, ), in, $max, (, 0, ), (, 4, ::, 7, ::, 2, ::, 1, ::, [, ], :, int, ), ;
]
