2 + 3;
2 - 3;
2 * 3;
2 / 3;
2 <= 3;
3 <= 2;
2.1 + 3.1;
2.1 - 3.1;
2.1 * 3.1;
4.2 / 2.1;
2.1 <= 3.1;
3.1 <= 2.1;
2 + 3.1;
2.1 - 3;
2 * 3.1;
2.1 / 3;
2 <= 3.1;
3.1 <= 2;
2 + 3 * 4 / 1 <= 5;
true;
false;
if true then 3 else 4;
if 4.6 <= 3 then if 2 <= .9 then 2 else 1 else 124.90;
0 / 0;
0 / 0.;
0. / 0;
0. / 0.;
NaN;
NaN + 2;
if NaN then 2 else 3;
4 +    -5   * 2;
let x = 2 + 3 in x <= 10;
let y = 10 in let y = 1 in y + y;
fun x -> x * 2 + 1;
(fun y -> if y then 1 else 0) (false);
(fun f -> f (10)) (fun var -> var -1);
let f1 = (fun x -> x + 1) in let f2 = (fun x -> x - 1) in f1(5) <= f2(5);
(fun x -> fun y -> x / y) (8) (2);
(fun x -> fun y -> x / y) (8);
